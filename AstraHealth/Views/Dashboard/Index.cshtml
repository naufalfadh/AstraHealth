@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model List<AstraHealth.Models.LaporanModel>
@{
    // Serialize PasienModel to JSON using C#
    var pasienData = Html.Raw(Json.Serialize(Model));
}
@{
    ViewData["Title"] = "Dashboard AstraHealth";
}
<head>
    <!-- ... tag-tag head lainnya ... -->

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.6.0/css/bootstrap.min.css">

    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }

        td {
            border: 3px solid #ddd;
            padding: 8px;
            text-align: left;
        }
    </style>

</head>
<body>
    <br>
    <br>
    <br>
    <br>
    <div class="container-fluid page-body-wrapper">
        <div class="main-panel">
            <div class="content-wrapper">
                <div class="row">
                    <div class="col-12 grid-margin stretch-card">
                        <div class="card">
                            <div class="card-body">
                                <div id="bannerCarousel" class="carousel slide" data-ride="carousel">
                                    <div class="carousel-inner">
                                        <div class="carousel-item active">
                                            <img class="d-block w-100" src="~/content/images/Banner.png" alt="First slide">
                                        </div>
                                        <div class="carousel-item">
                                            <img class="d-block w-100" src="~/content/images/Banner2.jpg" alt="Second slide">
                                        </div>
                                    </div>
                                    <a class="carousel-control-prev" href="#bannerCarousel" role="button" data-slide="prev">
                                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                    <a class="carousel-control-next" href="#bannerCarousel" role="button" data-slide="next">
                                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </div>

                                <div class="row">
                                    <div class="col-lg-4" style="text-align: center; padding: 40px 0px;">
                                        <img src="~/content/images/IMG_LogoTransformationInHarmony.png" class="wow fadeInUp fast" style="width: 60%; visibility: visible; animation-name: fadeInUp; animation-iteration-count: 1;">
                                    </div>
                                    <div class="col-lg-4" style="text-align: center; padding: 40px 0px;">
                                        <img src="~/content/images/IMG_LogoKampusMerdeka.png" class="wow fadeInUp fast" style="width: 30%; visibility: visible; animation-name: fadeInUp; animation-iteration-count: 1;">
                                    </div>
                                    <div class="col-lg-4" style="text-align: center; padding: 40px 0px;">
                                        <img src="~/content/images/IMG_LogoSatuIndonesia.png" class="wow fadeInUp fast" style="width: 40%; visibility: visible; animation-name: fadeInUp; animation-iteration-count: 1;">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12 grid-margin stretch-card">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex align-items-center justify-content-between">
                                    <h4 class="card-title mb-0">Register terbaru</h4>
                                </div>
                                <div class="table-responsive pt-3">
                                    <table class="table datatable table-bordered" id="myTable" ">
                                        <thead>
                                            <tr>
                                                <th scope="col">NIM atau NPK</th>
                                                <th scope="col">Nama</th>
                                                <th scope="col">Prodi atau Departemen</th>
                                                <th scope="col">Diagnosa</th>
                                                <th scope="col">Tanggal</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                    @foreach (var pasien in Model.Where(p => p.anm_tanggal.Date == DateTime.Now.Date))
                                    {
                                                <tr>
                                                    <td>@pasien.anm_id_pasien</td>
                                                    <td>@pasien.anm_nama_pasien</td>
                                                    <td>@pasien.anm_prodi_atau_departemen</td>
                                                    <td>@pasien.anm_diagnosa</td>
                                                    <td>@pasien.anm_tanggal</td>
                                                </tr>
                                    }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-8 flex-column d-flex stretch-card">
                        <div class="col-sm-12 grid-margin d-flex stretch-card">
                            <div class="card">
                                <div class="card-body">
                                    <div class="d-flex align-items-center justify-content-between">
                                        <h4 class="card-title">Kunjungan Program Studi dan Departemen</h4>
                                    </div>
                                    <div class="d-flex align-items-end">
                                        <label for="dari" class="col-sm-2">Dari : </label>
                                        <div style="padding-right: 5px; padding-left: 5px"></div>
                                        <label for="sampai" class="col-sm-2">Sampai : </label>
                                    </div>
                                    <div class="d-flex align-items-end">
                                        <input type="date" id="prodiDepartemenDari" onchange="updateProdiDepartemenChart()" class="form-control-sm col-sm-2" />
                                        <div style="padding-right: 5px; padding-left: 5px"></div>
                                        <input type="date" id="prodiDepartemenSampai" onchange="updateProdiDepartemenChart()" class="form-control-sm col-sm-2" />
                                    </div>
                                    <hr />
                                    <div id="prodi atau departemen chart">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4 flex-column d-flex stretch-card">
                        <div class="row flex-grow">
                            <div class="col-sm-12 grid-margin stretch-card">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <div class="d-flex align-items-center justify-content-between">
                                                    <h4 class="card-title">Kecelakaan Kerja dan Rujukan</h4>
                                                </div>
                                                <div class="d-flex align-items-end">
                                                    <label for="dari" class="col-sm-4">Dari : </label>
                                                    <div style="padding-right: 5px; padding-left: 5px"></div>
                                                    <label for="sampai" class="col-sm-4">Sampai : </label>
                                                </div>
                                                <div class="d-flex align-items-end">
                                                    <input type="date" id="kecelakaanRujukanDari" onchange="updateKecelakaanKerjaRujukanChart()" class="form-control-sm col-sm-4" />
                                                    <div style="padding-right: 5px; padding-left: 5px"></div>
                                                    <input type="date" id="kecelakaanRujukanSampai" onchange="updateKecelakaanKerjaRujukanChart()" class="form-control-sm col-sm-4" />
                                                </div>
                                                <hr />
                                                <div id="Kecelakaan Kerja dan Rujukan"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 grid-margin stretch-card">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex align-items-center justify-content-between">
                                    <h4 class="card-title">Diagnosa Terbanyak</h4>
                                </div>
                                <div class="d-flex align-items-end">
                                    <label for="dari" class="col-sm-3">Dari : </label>
                                    <div style="padding-right: 5px; padding-left: 5px"></div>
                                    <label for="sampai" class="col-sm-3">Sampai : </label>
                                </div>
                                <div class="d-flex align-items-end">
                                    <input type="date" id="diagnosaDari" onchange="updateDiagnosaChart()" class="form-control-sm col-sm-3" />
                                    <div style="padding-right: 5px; padding-left: 5px"></div>
                                    <input type="date" id="diagnosaSampai" onchange="updateDiagnosaChart()" class="form-control-sm col-sm-3" />
                                </div>
                                <hr />
                                <div id="Diagnosa Sakit"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 grid-margin stretch-card">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex align-items-center justify-content-between">
                                    <h4 class="card-title">Pemakaian Obat</h4>
                                </div>
                                <div class="d-flex align-items-end">
                                    <label for="dari" class="col-sm-2">Dari : </label>
                                    <div style="padding-right: 5px; padding-left: 5px"></div>
                                    <label for="sampai" class="col-sm-2">Sampai : </label>
                                </div>
                                <div class="d-flex align-items-end">
                                    <input type="date" id="obatDari" onchange="updatePemakaianObatChart()" class="form-control-sm col-sm-3" />
                                    <div style="padding-right: 5px; padding-left: 5px"></div>
                                    <input type="date" id="obatSampai" onchange="updatePemakaianObatChart()" class="form-control-sm col-sm-3" />
                                </div>
                                <hr />
                                <div id="Pemakaian Obat"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!-- Modal -->
                    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-lg" role="document">
                            <!-- Added "modal-lg" class for a larger modal -->
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h2>
                                        <strong class="modal-title" id="exampleModalLabel">Jadwal Operasional</strong>
                                    </h2>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <h4>
                                        <strong>
                                            Informasi UKK
                                        </strong>
                                    </h4>
                                    <p>Unit Kesehatan Kampus bertujuan untuk memberikan layanan kesehatan kepada mahasiswa dan karyawan. Berikut adalah beberapa informasi penting:</p>
                                    <ul>
                                        <li>Layanan kesehatan: Unit Kesehatan Kampus menyediakan layanan kesehatan umum, pemeriksaan kesehatan berkala, serta penanganan awal dalam keadaan darurat.</li>
                                        <li>Jadwal operasional: Unit Kesehatan Kampus beroperasi sesuai dengan jadwal yang ditentukan untuk memastikan ketersediaan layanan kesehatan yang optimal.</li>
                                    </ul>
                                    <br>
                                    <h4>
                                        <strong>
                                            Jadwal Operasional :
                                            <br>
                                            <br>
                                            <img src="~/content/images/JadwalOperasional.jpeg" />
                                        </strong>
                                    </h4>

                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Tutup</button>
                            </div>
                        </div>
                    </div>

                    @*<div class="row">
                        <div class="col-lg-12" style="text-align: center;">
                            <h3 style="font-weight: bold;">
                                Unit Kesehatan Kampus<br>
                                Politeknik Astra Cikarang
                            </h3>
                            <h5><i>"Bekerja sama dengan Rumah Sakit EMC Cikarang yang dapat membantu Civitas Politeknik Astra"</i></h5>
                            <br>
                        </div>
                        <div class="col-lg-4 mb-4 mx-auto">
                            <div class="card card-cascade wider wow fadeIn fast" style="visibility: visible; animation-name: fadeIn; animation-iteration-count: 1;">
                                <div class="view view-cascade overlay">
                                    <img class="card-img-top" src="~/content/images/rs.png" alt="Rumah Sakit EMC Cikarang">
                                    <a href="https://www.polytechnic.astra.ac.id/pembuatan-peralatan-perkakas-produksi/" target="_blank">
                                        <div class="mask rgba-white-slight waves-effect waves-light"></div>
                                    </a>
                                </div>
                                <div class="card-body card-body-cascade text-center">
                                    <h4 class="card-title"><strong>Rumah Sakit EMC Cikarang</strong></h4>
                                    <p class="card-text" style="margin-bottom: 5px !important;">
                                        <i>"Alamat: Komplek The Oasis, Komplek The Oasis Kav Jl. Raya Cikarang - Cibarusah No.1 Kav. I, Selatan, Sukaresmi, Cikarang Sel., Kabupaten Bekasi, Jawa Barat 17530"</i>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>*@
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {
            $('#myTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.25/i18n/Indonesian.json"
                }
            });
        });

        //set date
        // Fungsi untuk mengatur tanggal pertama bulan ini
        function setFirstDayOfMonth(inputId) {
            var input = document.getElementById(inputId);
            var currentDate = new Date();
            var firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
            input.value = formatDate(firstDayOfMonth);
        }

        // Fungsi untuk mengatur tanggal terakhir bulan ini
        function setLastDayOfMonth(inputId) {
            var input = document.getElementById(inputId);
            var currentDate = new Date();
            var lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
            input.value = formatDate(lastDayOfMonth);
        }

        // Fungsi untuk mengubah format tanggal menjadi 'yyyy-MM-dd'
        function formatDate(date) {
            var year = date.getFullYear();
            var month = (date.getMonth() + 1).toString().padStart(2, '0');
            var day = date.getDate().toString().padStart(2, '0');
            return `${year}-${month}-${day}`;
        }

        // Memanggil fungsi untuk mengatur nilai input
        setFirstDayOfMonth('prodiDepartemenDari');
        setLastDayOfMonth('prodiDepartemenSampai');

        setFirstDayOfMonth('kecelakaanRujukanDari');
        setLastDayOfMonth('kecelakaanRujukanSampai');

        setFirstDayOfMonth('diagnosaDari');
        setLastDayOfMonth('diagnosaSampai');

        setFirstDayOfMonth('obatDari');
        setLastDayOfMonth('obatSampai');
        //end set date

        // Embedding PasienModel data in a script tag
        var pasienData = @Html.Raw(Json.Serialize(Model));

        // Isi data dari model PasienModel
        var PasienDataItems = pasienData || []; // Ensure pasienData is initialized

        //kecelakaan kerja chart
        var kecelakaanKerjaRujukanChart;
        var kecelakaanKerjaRujukanData = [];

        var kecelakaanKerjaRujukanData = PasienDataItems.reduce(function (acc, item) {
            if (item.jumlah_kecelakaan_kerja != null && item.jumlah_rujukan != null) {
                acc.push({
                    name: item.jumlah_kecelakaan_kerja > 0 ? 'Kecelakaan Kerja' : '',
                    y: item.jumlah_kecelakaan_kerja,
                    drilldown: 'Kecelakaan Kerja'
                });
                acc.push({
                    name: item.jumlah_rujukan > 0 ? 'Rujukan Rumah Sakit' : '',
                    y: item.jumlah_rujukan,
                    drilldown: 'Rujukan Rumah Sakit'
                });
            }
            return acc;
        }, []);

        kecelakaanKerjaRujukanChart = Highcharts.chart('Kecelakaan Kerja dan Rujukan', {
            chart: {
                type: 'pie'
            },
            title: {
                text: '',
                align: 'left'
            },
            accessibility: {
                announceNewData: {
                    enabled: true
                },
            },

            plotOptions: {
                series: {
                    borderRadius: 5,
                    dataLabels: [{
                        enabled: true,
                        distance: 15,
                        format: '{point.name}'
                    }, {
                        enabled: true,
                        distance: '-30%',
                        filter: {
                            property: 'percentage',
                            operator: '>',
                            value: 5
                        },
                        format: '{point.y}',
                        style: {
                            fontSize: '0.9em',
                            textOutline: 'none'
                        }
                    }]
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y}</b> of total<br/>'
            },

            series: [
                {
                    name: 'Kecelakaan Kerjaa dan Rujukan',
                    colorByPoint: true,
                    data: kecelakaanKerjaRujukanData
                }
            ]
        });

        //update kecelakaan kerja rujukan chart
        function updateKecelakaanKerjaRujukanChart() {
            var dari = document.getElementById('kecelakaanRujukanDari').value;
            var sampai = document.getElementById('kecelakaanRujukanSampai').value;

            fetch('/Dashboard/UpdateKecelakaanRujukanDiagram', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ dari: dari, sampai: sampai }),
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Received data:', data);
                    updateKecelakaanKerjaRujukanChartData(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        // Function to update Diagnosa Sakit chart data
        function updateKecelakaanKerjaRujukanChartData(data) {
            var newData = data.reduce(function (acc, item) {
                if (item.jumlah_kecelakaan_kerja != null && item.jumlah_rujukan != null) {
                    acc.push({
                        name: item.jumlah_kecelakaan_kerja > 0 ? 'Kecelakaan Kerja' : '',
                        y: item.jumlah_kecelakaan_kerja,
                        drilldown: 'Kecelakaan Kerja'
                    });
                    acc.push({
                        name: item.jumlah_rujukan > 0 ? 'Rujukan Rumah Sakit' : '',
                        y: item.jumlah_rujukan,
                        drilldown: 'Rujukan Rumah Sakit'
                    });
                }
                return acc;
            }, []);

            kecelakaanKerjaRujukanChart.series[0].setData(newData);
            kecelakaanKerjaRujukanChart.redraw();
        }
        //end kecelakaan kerja chart


        //diagnosa sakit chart
        var diagnosaSakitChart;
        var diagnosaSakitData = [];

        // Mengisi data labels dan datasets dari diagnosaSakitData
        PasienDataItems.forEach(function (item) {
            if (item.diagnosa_sakit != null && item.jumlah_diagnosa != null) {
                diagnosaSakitData.push({
                    name: item.diagnosa_sakit,
                    y: item.jumlah_diagnosa,
                    drilldown: item.diagnosa_sakit
                });
            }
        });

        diagnosaSakitChart = Highcharts.chart('Diagnosa Sakit', {
            chart: {
                type: 'pie'
            },
            title: {
                text: '',
                align: 'left'
            },
            accessibility: {
                announceNewData: {
                    enabled: true
                },
            },

            plotOptions: {
                series: {
                    borderRadius: 5,
                    dataLabels: [{
                        enabled: true,
                        distance: 15,
                        format: '{point.name}'
                    }, {
                        enabled: true,
                        distance: '-30%',
                        filter: {
                            property: 'percentage',
                            operator: '>',
                            value: 5
                        },
                        format: '{point.y}',
                        style: {
                            fontSize: '0.9em',
                            textOutline: 'none'
                        }
                    }]
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y}</b> of total<br/>'
            },

            series: [
                {
                    name: 'Diagnosa Sakit Terbanyak',
                    colorByPoint: true,
                    data: diagnosaSakitData
                }
            ]
        });

        //update diagnosa chart
        function updateDiagnosaChart() {
            var dari = document.getElementById('diagnosaDari').value;
            var sampai = document.getElementById('diagnosaSampai').value;

            fetch('/Dashboard/UpdateDiagnosaDiagram', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ dari: dari, sampai: sampai }),
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Received data:', data);
                    updateDiagnosaChartData(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        // Function to update Diagnosa Sakit chart data
        function updateDiagnosaChartData(data) {
            var newData = [];
            data.forEach(function (item) {
                if (item.diagnosa_sakit != null && item.jumlah_diagnosa != null) {
                    newData.push({
                        name: item.diagnosa_sakit,
                        y: item.jumlah_diagnosa,
                        drilldown: item.diagnosa_sakit
                    });
                }
            });

            diagnosaSakitChart.series[0].setData(newData);
            diagnosaSakitChart.redraw();
        }
        //end diagnosa sakit chart

        //pemakaian obat chart
        var pemakaianObatChart;
        var pemakaianObatData = [];

        // Mengisi data labels dan datasets dari diagnosaSakitData
        PasienDataItems.forEach(function (item) {
            if (item.nama_obat != null && item.jumlah_pemakaian_obat != null) {
                pemakaianObatData.push({
                    name: item.nama_obat,
                    y: item.jumlah_pemakaian_obat,
                    drilldown: item.nama_obat
                });
            }
        });

        pemakaianObatChart = Highcharts.chart('Pemakaian Obat', {
            chart: {
                type: 'pie'
            },
            title: {
                text: '',
                align: 'left'
            },
            accessibility: {
                announceNewData: {
                    enabled: true
                },
            },

            plotOptions: {
                series: {
                    borderRadius: 5,
                    dataLabels: [{
                        enabled: true,
                        distance: 15,
                        format: '{point.name}'
                    }, {
                        enabled: true,
                        distance: '-30%',
                        filter: {
                            property: 'percentage',
                            operator: '>',
                            value: 5
                        },
                        format: '{point.y}',
                        style: {
                            fontSize: '0.9em',
                            textOutline: 'none'
                        }
                    }]
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y}</b> of total<br/>'
            },

            series: [
                {
                    name: 'Pemakaian Obat',
                    colorByPoint: true,
                    data: pemakaianObatData
                }
            ]
        });

        //update pemakaian obat chart
        function updatePemakaianObatChart() {
            var dari = document.getElementById('obatDari').value;
            var sampai = document.getElementById('obatSampai').value;

            fetch('/Dashboard/UpdatePemakaianObatDiagram', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ dari: dari, sampai: sampai }),
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Received data:', data);
                    updatePemakaianObatChartData(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        // Function to update Diagnosa Sakit chart data
        function updatePemakaianObatChartData(data) {
            var newData = [];
            data.forEach(function (item) {
                if (item.nama_obat != null && item.jumlah_pemakaian_obat != null) {
                    newData.push({
                        name: item.nama_obat,
                        y: item.jumlah_pemakaian_obat,
                        drilldown: item.nama_obat
                    });
                }
            });

            pemakaianObatChart.series[0].setData(newData);
            pemakaianObatChart.redraw();
        }
        //end pemakaian obat chart

        //prodi departemen chart
        var prodiDepartemenChart;
        var prodiDepartemenData = [];

        // Mengisi data labels dan datasets dari prodiDepartemenItems
        PasienDataItems.forEach(function (item) {
            if (item.nama_prodi_atau_departemen != null && item.jumlah_prodi_atau_departemen != null) {
                prodiDepartemenData.push({
                    name: item.nama_prodi_atau_departemen,
                    y: item.jumlah_prodi_atau_departemen,
                    drilldown: item.nama_prodi_atau_departemen
                });
            }
        });

        prodiDepartemenChart = Highcharts.chart('prodi atau departemen chart', {
            chart: {
                type: 'column'
            },
            title: {
                align: 'left',
                text: ''
            },
            accessibility: {
                announceNewData: {
                    enabled: true
                }
            },
            xAxis: {
                type: 'category'
            },
            yAxis: {
                title: {
                    text: 'Total Kunjungan'
                }
            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y}'
                    }
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y}</b> of total<br/>'
            },

            series: [
                {
                    name: 'Program Studi atau Departemen',
                    colorByPoint: true,
                    data: prodiDepartemenData
                }
            ]
        });

        //update diagnosa chart
        function updateProdiDepartemenChart() {
            var dari = document.getElementById('prodiDepartemenDari').value;
            var sampai = document.getElementById('prodiDepartemenSampai').value;

            fetch('/Dashboard/UpdateProdiDepartemenDiagram', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ dari: dari, sampai: sampai }),
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Received data:', data);
                    updateProdiDepartemenChartData(data);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        // Function to update Diagnosa Sakit chart data
        function updateProdiDepartemenChartData(data) {
            var newData = [];
            data.forEach(function (item) {
                if (item.nama_prodi_atau_departemen != null && item.jumlah_prodi_atau_departemen != null) {
                    newData.push({
                        name: item.nama_prodi_atau_departemen,
                        y: item.jumlah_prodi_atau_departemen,
                        drilldown: item.nama_prodi_atau_departemen
                    });
                }
            });

            prodiDepartemenChart.series[0].setData(newData);
            prodiDepartemenChart.redraw();
        }
        //end prodi departemen chart
    </script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.0/html2pdf.bundle.min.js"></script>
</body>
