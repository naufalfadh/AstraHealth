@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model List<AstraHealth.Models.PasienModel>
@{
    // Serialize PasienModel to JSON using C#
    var pasienData = Html.Raw(Json.Serialize(Model));
}
@{
    ViewData["Title"] = "Dashboard AstraHealth";
}
<head>
        <!-- ... tag-tag head lainnya ... -->
       
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.6.0/css/bootstrap.min.css">
  

    <style>

        body {
            padding-top: 60px; 
        }

        .row {/* 
            background-image: url('content/images/IMG_Background.jpg'); */
            background-color:white;
            padding-left: 20px; /* Sesuaikan dengan jumlah padding yang diinginkan */
            padding-right: 20px; /* Sesuaikan dengan jumlah padding yang diinginkan */
        }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    td {
        border: 3px solid #ddd;
        padding: 8px;
        text-align: left;
     
    }
   
    </style>

</head>
<body>
    <div id="bannerCarousel" class="carousel slide" data-ride="carousel" >
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img class="d-block w-100" src="~/content/images/Banner.png" alt="First slide">
            </div>
            <div class="carousel-item">
                <img class="d-block w-100" src="~/content/images/Banner2.jpg" alt="Second slide">
            </div>
       
        </div>
        <a class="carousel-control-prev" href="#bannerCarousel" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#bannerCarousel" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>

    <div class="row">

        <div class="row">
            <div class="col-lg-4" style="text-align: center; padding: 40px 0px;">
                <img src="~/content/images/IMG_LogoTransformationInHarmony.png" class="wow fadeInUp fast" style="width: 60%; visibility: visible; animation-name: fadeInUp; animation-iteration-count: 1;">
            </div>
            <div class="col-lg-4" style="text-align: center; padding: 40px 0px;">
                <img src="~/content/images/IMG_LogoKampusMerdeka.png" class="wow fadeInUp fast" style="width: 30%; visibility: visible; animation-name: fadeInUp; animation-iteration-count: 1;">
            </div>
            <div class="col-lg-4" style="text-align: center; padding: 40px 0px;">
                <img src="~/content/images/IMG_LogoSatuIndonesia.png" class="wow fadeInUp fast" style="width: 40%; visibility: visible; animation-name: fadeInUp; animation-iteration-count: 1;">
            </div>
        </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="row">
                <div class="col-sm-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-sm-flex align-items-start justify-content-between mb-4">
                                <div>
                                    <h4 class="card-title mb-1">Pasien baru baru ini</h4>
                                </div>
                            </div>

                                <div class="table-responsive">
                                    <table class="table table-bordered">
                                        <thead>
                                            <tr>
                                                <th scope="col">NIM atau NPK</th>
                                                <th scope="col">Nama</th>
                                                <th scope="col">Prodi atau Departemen</th>
                                                <th scope="col">Diagnosa</th>
                                                <th scope="col">Tanggal</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var pasien in Model.Where(p => p.anm_tanggal.Date == DateTime.Now.Date))
                                            {
                                                <tr>
                                                    <td>@pasien.anm_id_pasien</td>
                                                    <td>@pasien.anm_nama_pasien</td>
                                                    <td>@pasien.anm_prodi_atau_departemen</td>
                                                    <td>@pasien.anm_diagnosa</td>
                                                    <td>@pasien.anm_tanggal</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>


                            <hr /> <!-- Garis pemisah antara tabel dan chart -->

                            <div class="d-sm-flex align-items-start justify-content-between mb-4">
                                <div>
                                    <h4 class="card-title mb-1">Program Studi dan Departemen dengan Sakit Terbanyak</h4>
                                </div>
                            </div>
                            <div class="chart-container">
                                <canvas id="prodiDepartemenChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="col-lg-4">
            <div class="row">
                <div class="col-sm-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-sm-flex align-items-start justify-content-between mb-4">
                                <div>
                                    <h4 class="card-title mb-1">Diagnosa Sakit Terbanyak</h4>
                                </div>
                            </div>
                            <div class="chart-container">
                                <!-- Canvas untuk Prodi dan Departemen Chart -->
                                <canvas id="keluhanChart"></canvas>
                            </div>
                            <hr /> <!-- Garis pemisah antara chart -->
                            <div class="d-sm-flex align-items-start justify-content-between mb-4">
                                <div>
                                    <h4 class="card-title mb-1">Pemakaian Obat</h4>
                                </div>
                            </div>
                            <div class="chart-container">
                                <!-- Canvas untuk Kecelakaan Kerja Chart -->
                                    <canvas id="pemakaianObatChart"></canvas>
                            </div>
                            <hr /> <!-- Garis pemisah antara chart -->
                            <div class="d-sm-flex align-items-start justify-content-between mb-4">
                                <div>
                                    <h4 class="card-title mb-1">Kecelakaan Kerja dan Rujukan</h4>
                                </div>
                            </div>
                            <div class="chart-container">
                                <!-- Canvas untuk Keluhan Chart -->
                                    <canvas id="kecelakaanKerjaChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container">
            <br>
            <div class="row justify-content-center" style="margin: 0;">
                <div class="col-lg-12" style="text-align: center;">
                    <h3 style="font-weight: bold;">Jadwal Operasional</h3>
                    <h5><i>"Mahasiswa/wi dan karyawan dapat melihat Jam Operasional berikut ini"</i></h5>
                    <br>
                </div>
                <div class="col-lg-4 mb-3 wow fadeIn fast" style="visibility: visible; animation-name: fadeIn; animation-iteration-count: 1;">
                    <div class="card-wrapper">
                        <div id="card-0" class="card text-center flipped">
                            <div>
                                <div class="card-up" style="background-color: #0059AB; height: auto; padding: 20px; font-size: 25px; color: white; font-weight: bold;">
                                    Jadwal Operasional
                                </div>
                                <br>
                                <!-- Tombol untuk memunculkan modal -->
                                <button class="btn btn-primary" style="background-color: #0059AB;" data-toggle="modal" data-target="#myModal">
                                    Selengkapnya
                                    <i class="fas fa-arrow-right"></i>
                                </button>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br>
        <br>

        <!-- Modal -->
        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                <!-- Added "modal-lg" class for a larger modal -->
                <div class="modal-content">
                    <div class="modal-header">
                        <h2>
                            <strong class="modal-title" id="exampleModalLabel">Jadwal Operasional</strong>
                        </h2>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <h4>
                            <strong>
                                Informasi UKK
                            </strong>
                        </h4>
                        <p>Unit Kesehatan Kampus bertujuan untuk memberikan layanan kesehatan kepada mahasiswa dan karyawan. Berikut adalah beberapa informasi penting:</p>
                        <ul>
                            <li>Layanan kesehatan: Unit Kesehatan Kampus menyediakan layanan kesehatan umum, pemeriksaan kesehatan berkala, serta penanganan awal dalam keadaan darurat.</li>
                            <li>Jadwal operasional: Unit Kesehatan Kampus beroperasi sesuai dengan jadwal yang ditentukan untuk memastikan ketersediaan layanan kesehatan yang optimal.</li>
                        </ul>
                        <br>
                        <h4>
                            <strong>
                                Jadwal Operasional :
                                <br>
                                <br>
                                <img src="~/content/images/JadwalOperasional.jpeg" />
                            </strong>
                        </h4>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Tutup</button>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-lg-12" style="text-align: center;">
        <h3 style="font-weight: bold;">
           Unit Kesehatan Kampus<br>
            Politeknik Astra Cikarang
        </h3>
        <h5><i>"Bekerja sama dengan Rumah Sakit EMC Cikarang yang dapat membantu Civitas Politeknik Astra"</i></h5>
        <br>
    </div>
        <div class="col-lg-4 mb-4 mx-auto">
            <div class="card card-cascade wider wow fadeIn fast" style="visibility: visible; animation-name: fadeIn; animation-iteration-count: 1;">
                <div class="view view-cascade overlay">
                    <img class="card-img-top" src="~/content/images/rs.png" alt="Rumah Sakit EMC Cikarang">
                    <a href="https://www.polytechnic.astra.ac.id/pembuatan-peralatan-perkakas-produksi/" target="_blank">
                        <div class="mask rgba-white-slight waves-effect waves-light"></div>
                    </a>
                </div>
                <div class="card-body card-body-cascade text-center">
                    <h4 class="card-title"><strong>Rumah Sakit EMC Cikarang</strong></h4>
                    <p class="card-text" style="margin-bottom: 5px !important;">
                        <i>"Alamat: Komplek The Oasis, Komplek The Oasis Kav Jl. Raya Cikarang - Cibarusah No.1 Kav. I, Selatan, Sukaresmi, Cikarang Sel., Kabupaten Bekasi, Jawa Barat 17530"</i>
                    </p>
                </div>
            </div>
        </div>


    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var keluhanData = {
                labels: [],
                datasets: [{
                    data: [],
                    backgroundColor: [],
                    hoverBackgroundColor: []
                }]
            };

            // Embedding PasienModel data in a script tag
            var pasienData = @Html.Raw(Json.Serialize(Model));

            // Isi data dari model PasienModel
            var diagnosaSakitData = pasienData || []; // Ensure pasienData is initialized

            // Mengisi data labels dan datasets dari diagnosaSakitData
            diagnosaSakitData.forEach(function (item) {
                if (item.diagnosa_sakit != null) {
                    keluhanData.labels.push(item.diagnosa_sakit);
                    keluhanData.datasets[0].data.push(item.jumlah_diagnosa);

                    // Generate warna acak untuk setiap label
                    var randomColor = getRandomColor();
                    keluhanData.datasets[0].backgroundColor.push(randomColor);
                    keluhanData.datasets[0].hoverBackgroundColor.push(randomColor);
                }
            });

            // Options untuk responsif
            var options = {
                responsive: true,
                maintainAspectRatio: false
            };

            // Mendapatkan elemen canvas
            var canvas = document.getElementById('keluhanChart').getContext('2d');

            // Membuat chart keluhanChart
            var keluhanChart = new Chart(canvas, {
                type: 'pie',
                data: keluhanData,
                options: options
            });

            // Fungsi untuk mendapatkan warna acak
            function getRandomColor() {
                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }
        });

        document.addEventListener('DOMContentLoaded', function () {
            var pemakaianObatData = {
                labels: [],
                datasets: [{
                    data: [],
                    backgroundColor: [],
                    hoverBackgroundColor: []
                }]
            };

            // Embedding PasienModel data in a script tag
            var pasienData = @Html.Raw(Json.Serialize(Model));

            // Isi data dari model PasienModel
            var pemakaianObatDataItems = pasienData || []; // Ensure pasienData is initialized

            // Mengisi data labels dan datasets dari pemakaianObatData
            pemakaianObatDataItems.forEach(function (item) {
                if (item.nama_obat != null) {
                    pemakaianObatData.labels.push(item.nama_obat);
                    pemakaianObatData.datasets[0].data.push(item.jumlah_pemakaian_obat);

                    // Generate warna acak untuk setiap label
                    var randomColor = getRandomColor();
                    pemakaianObatData.datasets[0].backgroundColor.push(randomColor);
                    pemakaianObatData.datasets[0].hoverBackgroundColor.push(randomColor);
                }
            });

            // Options untuk responsif
            var options = {
                responsive: true,
                maintainAspectRatio: false
            };

            // Mendapatkan elemen canvas
            var canvas = document.getElementById('pemakaianObatChart').getContext('2d');

            // Membuat chart pemakaianObatChart
            var pemakaianObatChart = new Chart(canvas, {
                type: 'pie',
                data: pemakaianObatData,
                options: options
            });

            // Fungsi untuk mendapatkan warna acak
            function getRandomColor() {
                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }
        });

        document.addEventListener('DOMContentLoaded', function () {
            var kecelakaanKerjaRujukanData = {
                labels: ['Kecelakaan Kerja', 'Rujukan'],
                datasets: [{
                    data: [], // Menambahkan nilai nol sesuai dengan jumlah label
                    backgroundColor: ['#FF6384', '#0000FF'], // Warna untuk setiap label
                    hoverBackgroundColor: ['#FF6384', '#0000FF']
                }]
            };

            // Embedding PasienModel data in a script tag
            var pasienData = @Html.Raw(Json.Serialize(Model));

            // Isi data dari model PasienModel
            var kecelakaanKerjaRujukanDataItems = pasienData || []; // Ensure pasienData is initialized

            // Mengisi data labels dan datasets dari pemakaianObatData
            kecelakaanKerjaRujukanDataItems.forEach(function (item) {
                if (item.jumlah_kecelakaan_kerja != null && item.jumlah_rujukan != null) {
                    kecelakaanKerjaRujukanData.datasets[0].data.push(item.jumlah_kecelakaan_kerja);
                    kecelakaanKerjaRujukanData.datasets[0].data.push(item.jumlah_rujukan);
                }
            });

            // Options untuk responsif
            var options = {
                responsive: true,
                maintainAspectRatio: false
            };

            // Mendapatkan elemen canvas
            var canvas = document.getElementById('kecelakaanKerjaChart').getContext('2d');

            // Membuat chart kecelakaanKerjaChart
            var kecelakaanKerjaChart = new Chart(canvas, {
                type: 'pie',
                data: kecelakaanKerjaRujukanData,
                options: options
            });
        });

        document.addEventListener('DOMContentLoaded', function () {
            var prodiDepartemenData = {
                labels: [],
                datasets: [{
                    data: [],
                    backgroundColor: [],
                    hoverBackgroundColor: []
                }]
            };

            // Embedding PasienModel data in a script tag
            var pasienData = @Html.Raw(Json.Serialize(Model));

            // Isi data dari model PasienModel
            var prodiDepartemenItems = pasienData || []; // Ensure pasienData is initialized

            // Mengisi data labels dan datasets dari prodiDepartemenItems
            prodiDepartemenItems.forEach(function (item) {
                if (item.nama_prodi_atau_departemen != null && item.jumlah_prodi_atau_departemen != null) {
                    prodiDepartemenData.labels.push(item.nama_prodi_atau_departemen);
                    prodiDepartemenData.datasets[0].data.push(item.jumlah_prodi_atau_departemen);

                    // Generate warna acak untuk setiap label
                    var randomColor = getRandomColor();
                    prodiDepartemenData.datasets[0].backgroundColor.push(randomColor);
                    prodiDepartemenData.datasets[0].hoverBackgroundColor.push(randomColor);
                }
            });

            // Options untuk responsif
            var options = {
                responsive: true,
                maintainAspectRatio: false
            };

            // Mendapatkan elemen canvas
            var canvas = document.getElementById('prodiDepartemenChart').getContext('2d');

            // Membuat chart prodiDepartemenChart
            var prodiDepartemenChart = new Chart(canvas, {
                type: 'bar',
                data: prodiDepartemenData,
                options: options
            });

            // Fungsi untuk mendapatkan warna acak
            function getRandomColor() {
                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            }
        });

    </script>

      
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.0/html2pdf.bundle.min.js"></script>
</body>
